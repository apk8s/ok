# Build customization
build:
  # Path to main.go file.
  # Default is `main.go`
  main: ./cmd/ok.go
  binary: ok

  env:
  - GO111MODULE=on
  - GOPROXY=https://gocenter.io
  - CGO_ENABLED=0

  # GOOS list to build in.
  # For more info refer to https://golang.org/doc/install/source#environment
  # Defaults are darwin and linux
  goos:
  - linux

  # GOARCH to build in.
  # For more info refer to https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64
  goarch:
  - amd64
  - arm

  ldflags: -s -w -X main.Version={{.Version}}

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL.
  github:
    owner: apk8s
    name: ok

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: false

  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: false

  # You can change the name of the GitHub release.
  # Default is ``
  name_template: "{{.ProjectName}}-v{{.Version}} {{.Env.USER}}"

  # You can disable this pipe in order to not upload any artifacts to
  # GitHub.
  # Defaults to false.
  disable: false


dockers:
-
  goos: linux
  goarch: amd64
  goarm: ''
  binaries:
    - ok
  dockerfile: Dockerfile
  image_templates:
    - "apk8s/ok:latest"
    - "apk8s/ok:{{ .Tag }}"
    - "apk8s/ok:amd64-{{ .Tag }}"
  build_flag_templates:
    - "--label=org.label-schema.schema-version=1.0"
    - "--label=org.label-schema.version={{.Version}}"
    - "--label=org.label-schema.name={{.ProjectName}}"
-
  goos: linux
  goarch: arm
  goarm: 6
  binaries:
    - ok
  dockerfile: Dockerfile
  image_templates:
    - "apk8s/ok:armv6-latest"
    - "apk8s/ok:armv6-{{ .Tag }}"
  build_flag_templates:
    - "--label=org.label-schema.schema-version=1.0"
    - "--label=org.label-schema.version={{.Version}}"
    - "--label=org.label-schema.name={{.ProjectName}}"